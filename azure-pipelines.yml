jobs:
  - job: Rustfmt
    strategy:
        matrix:
            Linux:
                imageName: ubuntu-latest
            macOS:
                imageName: macOS-latest
            Windows:
                imageName: windows-latest
    pool:
        vmImage: $(imageName)
    steps:
      - template: .azure-pipelines/install-rust.yml
      - script: rustup component add rustfmt
        displayName: Install Rustfmt
      - script: cargo fmt -- --check
        displayName: Run Rustfmt checks
  - job: Clippy
    strategy:
        matrix:
            Linux:
                imageName: ubuntu-latest
            macOS:
                imageName: macOS-latest
            Windows:
                imageName: windows-latest
    pool:
        vmImage: $(imageName)
    steps:
      - template: .azure-pipelines/install-rust.yml
      - script: rustup component add clippy
        displayName: Install Clippy
      - script: cargo clippy --all-targets --all-features -- -D warnings
        displayName: Run Clippy checks
  - job: Tests
    strategy:
        matrix:
            Linux:
                imageName: ubuntu-latest
            macOS:
                imageName: macOS-latest
            Windows:
                imageName: windows-latest
    pool:
        vmImage: $(imageName)
    steps:
      - template: .azure-pipelines/install-rust.yml
      - script: cargo test
        displayName: Run tests
  - job: Coverage
    pool:
        vmImage: ubuntu-latest
    steps:
      - template: .azure-pipelines/install-rust.yml
      - script: |
            set -e
            set -o pipefail
            KCOV_VERSION=36
            sudo apt-get install --no-install-recommends -y binutils-dev libcurl4-gnutls-dev libdw-dev libiberty-dev
            curl -L "https://github.com/SimonKagstrom/kcov/archive/v$KCOV_VERSION.tar.gz" | tar xz
            cd "kcov-$KCOV_VERSION"
            mkdir build
            cd build
            cmake -DCMAKE_BUILD_TYPE=Release ..
            make -j
            sudo make -j install
        displayName: Install Kcov
      - script: cargo install cargo-kcov
        displayName: Install cargo-kcov
      - script: |
            set -e
            set -o pipefail
            echo "#!/usr/bin/env python3

            import shlex
            import sys
            import subprocess


            def main():
                command = ['/usr/local/bin/kcov', *sys.argv[1:]]

                print('===> ' + ' '.join(map(shlex.quote, command)), file=sys.stderr, flush=True)

                exit(subprocess.run(command).returncode)


            if __name__ == '__main__':
                main()" > ~/.cargo/bin/kcov
            chmod +x ~/.cargo/bin/kcov
            cargo generate-lockfile
            cargo kcov
        displayName: Run coverage tests
      - task: PublishCodeCoverageResults@1
        displayName: Publish coverage result
        inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: target/cov/kcov-merged/cobertura.xml
